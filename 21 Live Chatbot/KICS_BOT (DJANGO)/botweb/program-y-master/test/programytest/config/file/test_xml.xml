<?xml version="1.0" encoding="UTF-8" ?>
<root>
	<console>
	  <default_userid>console</default_userid>
	  <prompt>>>></prompt>
	  <description>ProgramY AIML2.0 Client</description>
	  <bot_selector>programy.clients.botfactory.DefaultBotSelector</bot_selector>
	  <scheduler>
		<name>scheduler</name>
		<debug_level>0</debug_level>
		<add_listeners>false</add_listeners>
		<remove_all_jobs>false</remove_all_jobs>
		<jobstore>
		  <name>mongo</name>
		  <mongo>
			<collection>programy</collection>
		  </mongo>
		</jobstore>
		<threadpool>
		  <max_workers>20</max_workers>
		</threadpool>
		<processpool>
		  <max_workers>5</max_workers>
		</processpool>
		<job_defaults>
		  <coalesce>false</coalesce>
		  <max_instances>3</max_instances>
		</job_defaults>
	  </scheduler>
	  <email>
		<host/>
		<port/>
		<username/>
		<password/>
		<from_addr/>
	  </email>
	  <triggers>
		<manager>programy.triggers.local.LocalTriggerManager</manager>
	  </triggers>
	  <responder>
		<name>Client Ping Responder</name>
		<host/>
		<port/>
		<ssl_cert_file/>
		<ssl_key_file/>
		<url/>
		<shutdown/>
		<register/>
		<unregister/>
		<debug>false</debug>
	  </responder>
	  <renderer>programy.clients.render.text.TextRenderer</renderer>
	  <storage>
		<entities>
		  <categories>file</categories>
		  <errors>file</errors>
		  <duplicates>file</duplicates>
		  <learnf>file</learnf>
		  <conversations>file</conversations>
		  <maps>file</maps>
		  <sets>file</sets>
		  <rdf>file</rdf>
		  <denormal>file</denormal>
		  <normal>file</normal>
		  <gender>file</gender>
		  <person>file</person>
		  <person2>file</person2>
		  <regex_templates>file</regex_templates>
		  <properties>file</properties>
		  <defaults>file</defaults>
		  <variables>file</variables>
		  <twitter>file</twitter>
		  <spelling_corpus>file</spelling_corpus>
		  <license_keys>file</license_keys>
		  <pattern_nodes>file</pattern_nodes>
		  <template_nodes>file</template_nodes>
		  <binaries>file</binaries>
		  <braintree>file</braintree>
		  <preprocessors>file</preprocessors>
		  <postprocessors>file</postprocessors>
		  <postquestionprocessors>file</postquestionprocessors>
		  <usergroups>file</usergroups>
		  <triggers>file</triggers>
		</entities>
		<stores>
		  <file>
			<type>file</type>
			<config>
			  <categories_storage>
				<dirs>./categories</dirs>
				<extension>aiml</extension>
				<subdirs>true</subdirs>
				<format>xml</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </categories_storage>
			  <errors_storage>
				<file>./debug/errors.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </errors_storage>
			  <duplicates_storage>
				<file>./debug/duplicates.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </duplicates_storage>
			  <learnf_storage>
				<dirs>./categories/learnf</dirs>
				<extension>aiml</extension>
				<subdirs>false</subdirs>
				<format>xml</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </learnf_storage>
			  <conversation_storage>
				<dirs>./conversations</dirs>
				<extension>txt</extension>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </conversation_storage>
			  <sets_storage>
				<dirs>./sets</dirs>
				<extension>txt</extension>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </sets_storage>
			  <maps_storage>
				<dirs>./maps</dirs>
				<extension>txt</extension>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </maps_storage>
			  <rdf_storage>
				<dirs>./rdfs</dirs>
				<extension>txt</extension>
				<subdirs>true</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </rdf_storage>
			  <denormal_storage>
				<file>./lookups/denormal.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </denormal_storage>
			  <normal_storage>
				<file>./lookups/normal.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </normal_storage>
			  <gender_storage>
				<file>./lookups/gender.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </gender_storage>
			  <person_storage>
				<file>./lookups/person.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </person_storage>
			  <person2_storage>
				<file>./lookups/person2.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </person2_storage>
			  <regex_storage>
				<file>./regex/regex-templates.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </regex_storage>
			  <properties_storage>
				<file>./properties/properties.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </properties_storage>
			  <defaults_storage>
				<file>./properties/defaults.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </defaults_storage>
			  <twitter_storage>
				<dirs>./twitter</dirs>
				<extension>txt</extension>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </twitter_storage>
			  <spelling_storage>
				<file>./spelling/corpus.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </spelling_storage>
			  <license_storage>
				<file>./licenses/license.keys</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </license_storage>
			  <pattern_nodes_storage>
				<file>./nodes/pattern_nodes.conf</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </pattern_nodes_storage>
			  <template_nodes_storage>
				<file>./nodes/template_nodes.conf</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </template_nodes_storage>
			  <binaries_storage>
				<file>./braintree/braintree.bin</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>binary</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </binaries_storage>
			  <braintree_storage>
				<file>./braintree/braintree.xml</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>xml</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </braintree_storage>
			  <preprocessors_storage>
				<file>./processing/preprocessors.conf</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </preprocessors_storage>
			  <postprocessors_storage>
				<file>./processing/postprocessors.conf</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </postprocessors_storage>
			  <postquestionprocessors_storage>
				<file>./processing/postquestionprocessors.conf</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </postquestionprocessors_storage>
			  <usergroups_storage>
				<file>./security/usergroups.yaml</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </usergroups_storage>
			  <triggers_storage>
				<file>./triggers/triggers.txt</file>
				<extension/>
				<subdirs>false</subdirs>
				<format>text</format>
				<encoding>utf-8</encoding>
				<delete_on_start>false</delete_on_start>
			  </triggers_storage>
			</config>
		  </file>
		</stores>
	  </storage>
	  <bots>
		<bot>
		  <bot_root>.</bot_root>
		  <default_response>Sorry, I don't have an answer for that!</default_response>
		  <default_response_srai>YEMPTY</default_response_srai>
		  <exit_response>So long, and thanks for the fish!</exit_response>
		  <exit_response_srai>YEXITRESPONSE</exit_response_srai>
		  <initial_question>Hi, how can I help you today?</initial_question>
		  <initial_question_srai>YINITIALQUESTION</initial_question_srai>
		  <empty_string>YEMPTY</empty_string>
		  <override_properties>true</override_properties>
		  <max_question_recursion>100</max_question_recursion>
		  <max_question_timeout>60</max_question_timeout>
		  <max_search_depth>100</max_search_depth>
		  <max_search_timeout>60</max_search_timeout>
		  <tab_parse_output>true</tab_parse_output>
		  <spelling>
			<classname>programy.spelling.norvig.NorvigSpellingChecker</classname>
			<alphabet>ABCDEFGHIJKLMNOPQRSTUVWXYZ</alphabet>
			<check_before>true</check_before>
			<check_and_retry>true</check_and_retry>
		  </spelling>
		  <conversations>
			<max_histories>100</max_histories>
			<restore_last_topic>true</restore_last_topic>
			<initial_topic>*</initial_topic>
			<empty_on_start>true</empty_on_start>
			<multi_client>false</multi_client>
		  </conversations>
		  <splitter>
			<classname>programy.dialog.splitter.regex.RegexSentenceSplitter</classname>
			<split_chars>[:;,.?!]</split_chars>
		  </splitter>
		  <joiner>
			<classname>programy.dialog.joiner.joiner.SentenceJoiner</classname>
			<join_chars>.?!</join_chars>
			<terminator>.</terminator>
		  </joiner>
		  <from_translator>
			<classname>programy.nlp.translate.textblob_translator.TextBlobTranslator</classname>
			<from/>
			<to/>
		  </from_translator>
		  <to_translator>
			<classname>programy.nlp.translate.textblob_translator.TextBlobTranslator</classname>
			<from/>
			<to/>
		  </to_translator>
		  <sentiment>
			<classname>programy.nlp.sentiment.textblob_sentiment.TextBlobSentimentAnalyser</classname>
			<scores>programy.nlp.sentiment.scores.SentimentScores</scores>
		  </sentiment>
		  <brains>
			<brain>
			  <overrides>
				<allow_system_aiml>true</allow_system_aiml>
				<allow_learn_aiml>true</allow_learn_aiml>
				<allow_learnf_aiml>true</allow_learnf_aiml>
			  </overrides>
			  <defaults>
				<default_get>unknown</default_get>
				<default_property>unknown</default_property>
				<default_map>unknown</default_map>
			  </defaults>
			  <binaries>
				<save_binary>true</save_binary>
				<load_binary>true</load_binary>
				<load_aiml_on_binary_fail>true</load_aiml_on_binary_fail>
			  </binaries>
			  <braintree>
				<create>true</create>
				<save_as_user>system</save_as_user>
			  </braintree>
			  <security>
				<authentication>
				  <classname>programy.security.authenticate.passthrough.BasicPassThroughAuthenticationService</classname>
				  <denied_srai>AUTHENTICATION_FAILED</denied_srai>
				  <denied_text>Access Denied!</denied_text>
				</authentication>
				<authorisation>
				  <classname>programy.security.authorise.usergroupsauthorisor.BasicUserGroupAuthorisationService</classname>
				  <denied_srai>AUTHORISATION_FAILED</denied_srai>
				  <denied_text>Access Denied!</denied_text>
				</authorisation>
				<account_linker>
				  <classname>programy.security.linking.accountlinker.BasicAccountLinkerService</classname>
				  <denied_srai>ACCOUNT_LINKING_FAILED</denied_srai>
				  <denied_text>Unable to link accounts!</denied_text>
				</account_linker>
			  </security>
			  <oob>
				<default>
				  <classname>programy.oob.defaults.default.DefaultOutOfBandProcessor</classname>
				</default>
				<alarm>
				  <classname>programy.oob.defaults.alarm.AlarmOutOfBandProcessor</classname>
				</alarm>
				<camera>
				  <classname>programy.oob.defaults.camera.CameraOutOfBandProcessor</classname>
				</camera>
				<clear>
				  <classname>programy.oob.defaults.clear.ClearOutOfBandProcessor</classname>
				</clear>
				<dial>
				  <classname>programy.oob.defaults.dial.DialOutOfBandProcessor</classname>
				</dial>
				<dialog>
				  <classname>programy.oob.defaults.dialog.DialogOutOfBandProcessor</classname>
				</dialog>
				<email>
				  <classname>programy.oob.defaults.email.EmailOutOfBandProcessor</classname>
				</email>
				<geomap>
				  <classname>programy.oob.defaults.map.MapOutOfBandProcessor</classname>
				</geomap>
				<schedule>
				  <classname>programy.oob.defaults.schedule.ScheduleOutOfBandProcessor</classname>
				</schedule>
				<search>
				  <classname>programy.oob.defaults.search.SearchOutOfBandProcessor</classname>
				</search>
				<sms>
				  <classname>programy.oob.defaults.sms.SMSOutOfBandProcessor</classname>
				</sms>
				<url>
				  <classname>programy.oob.defaults.url.URLOutOfBandProcessor</classname>
				</url>
				<wifi>
				  <classname>programy.oob.defaults.wifi.WifiOutOfBandProcessor</classname>
				</wifi>
			  </oob>
			  <dynamic>
				<sets>
				  <NUMBER>programy.dynamic.sets.numeric.IsNumeric</NUMBER>
				  <ROMAN>programy.dynamic.sets.roman.IsRomanNumeral</ROMAN>
				  <STOPWORD>programy.dynamic.sets.stopword.IsStopWord</STOPWORD>
				  <SYNSETS>programy.dynamic.sets.synsets.IsSynset</SYNSETS>
				</sets>
				<maps>
				  <ROMANTODDEC>programy.dynamic.maps.roman.MapRomanToDecimal</ROMANTODDEC>
				  <DECTOROMAN>programy.dynamic.maps.roman.MapDecimalToRoman</DECTOROMAN>
				  <LEMMATIZE>programy.dynamic.maps.lemmatize.LemmatizeMap</LEMMATIZE>
				  <STEMMER>programy.dynamic.maps.stemmer.StemmerMap</STEMMER>
				</maps>
				<variables>
				  <GETTIME>programy.dynamic.variables.datetime.GetTime</GETTIME>
				</variables>
			  </dynamic>
			  <tokenizer>
				<classname>programy.dialog.tokenizer.tokenizer.Tokenizer</classname>
				<split_chars></split_chars>
			  </tokenizer>
			  <debugfiles>
				<save_errors>false</save_errors>
				<save_duplicates>false</save_duplicates>
			  </debugfiles>
			</brain>
		  </brains>
		  <brain_selector>programy.brainfactory.DefaultBrainSelector</brain_selector>
		</bot>
	  </bots>
	</console>
</root>
